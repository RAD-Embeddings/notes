\date{2025-06-20T05:24:25Z}
\taxon{Definition}
\title{Deterministic Finite Automata}

\import{thesis-I5ID}  % Formal Languages

\def\path{\xi}
\def\eqdef{\triangleq}
\def\DFA{D}
\def\DFA-Set{\text{DFA}}

\p{
  A \strong{Deterministic Finite Automaton} (DFA) is a 5-tuple,
  #{\DFA = \langle Q, \alphabet, \delta, q_0, F\rangle}, where #{Q} is a finite set of
  \strong{states}, #{\alphabet} is a finite alphabet,
  #{\delta : Q \times \alphabet \to Q} is the \strong{transition
    function}, #{q_0 \in Q} is the \strong{initial state}, and #{F \subseteq Q}
  are the \strong{accepting states}. The transition function is lifted
  to strings, #{\delta^* : Q \times \alphabet^* \to Q}, via recursive
  application of #{\delta}, i.e.,}
\p{
    ##{
      \delta^*(q, x) \eqdef \begin{cases}
        q & \text{if } x = \emptystring\\
        \delta(\delta^*(q, y), \sigma) &\text{if } x=y \concat \sigma 
      \end{cases}.
    }
    A string #{x} is an \strong{access-string} for state #{q} if
    #{\delta^*(q_0, x) = q}. #{\DFA} is said to be \strong{trimmed} if each state
    #{q\in Q} has at least one access-string.  One says #{\DFA}
    \strong{accepts} #{x} if #{\delta^*(q_0, x) \in F}.  Denote by #{L[\DFA]}
    the set of strings accepted by #{\DFA} from #{q_0}. Finally, we say
    that #{\DFA} \strong{recognizes} #{L} iff #{L[\DFA]}.
}
\p{\strong{Remark:} It is often implictily assumed the a DFA is trimmed.}
